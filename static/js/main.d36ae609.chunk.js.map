{"version":3,"sources":["components/Index-LogIn Site/LogInBox.js","components/Header/SlideOne.js","components/Header/SlideTwo.js","components/Header/SlideThree.js","components/Header/Header.js","components/Index-LogIn Site/Block.js","components/Index-LogIn Site/WrapperAnimations.js","Flex.js","components/Nav/Nav.js","components/YourAccountSite/MessageModal.js","components/YourAccountSite/History.js","components/YourAccountSite/TransferModal.js","components/YourAccountSite/Account.js","components/YourAccountSite/Currencies.js","components/CryptoCurrenciesSite/CryptoCurrenciesSite.js","components/YourAccountSite/YourAccountSite.js","components/YourAccountSite/CalculateCredit.js","components/DepositSite/DepositSite.js","components/About/About.js","components/BankTransfer/ConfirmationModal.js","components/BankTransfer/BankTransfer.js","App.js","index.js"],"names":["LogInBox","randomCode","setLogin","setShowHomeSite","codes","inputLogin","useRef","inputPassword","inputCode","displayHidden","visibility","displayBlock","useState","errorLoginIsHidden","setErrorLoginIsHidden","errorPassIsHidden","setErrorPassinIsHidden","errorCodeIsHidden","setErrorCodeIsHidden","randomNumber","Math","floor","random","length","choosingRandomCode","checkLogin","current","value","checkPassword","checkCode","className","type","placeholder","ref","style","onClick","SlideOne","SlideTwo","icon","faBolt","SlideThree","Header","Block","props","addclass","text","WrapperAnimations","faHandshake","faMoneyBill","faEuroSign","Flex","children","Nav","to","MessageModal","modalBoolean","variable","function","convert","History","transactions","map","transaction","index","title","amount","date","income","color","toLocaleDateString","toFixed","TransferModal","Account","isVisible","setIsVisible","buttonText","setButtonText","convertButtonText","setConvertButtonText","modalIsHidden","setModalIsHidden","modalText","setModalText","transferModalIsHidden","setTransferModalIsHidden","historyIsHidden","setHistoryIsHidden","newTransaction","cost","euro","Date","console","log","setHistory","history","balance","toLocaleString","isPln","boolean","setBalance","setIsPln","Currencies","currenciesObjects","setCurrenciesObjects","setDate","priceGold","setPriceGold","useEffect","fetch","then","json","data","effectiveDate","rates","obj","code","id","prev","prop","resp","cena","mid","currency","CryptoCurrenciesSite","cryptos","setCryptos","interval","setInterval","response","clearInterval","symbol","high","name","price","parseFloat","YourAccountSite","login","historyTransactions","setHistoryTransactions","accountBalance","setAccountBalance","euroMid","setEuroMid","window","scrollTo","CalculateCredit","showInstallmentInfo","setShowInstallmentInfo","showErrorInfo","setShowErrorInfo","creditValue","setCreditValue","years","setYears","months","setMonths","installment","setInstallment","isValid","calculating","min","onChange","e","target","test","faRedo","DepositSite","monthsValue","setMonthsValue","inputIsHidden","setInputIsHidden","inputValue","setInputValue","errorIsHidden","setErrorIsHidden","answerIsHidden","setAnswerIsHidden","earnings","setEarnings","parseInt","faArrowRight","About","ConfirmationModal","show","toggle","faCheckCircle","BankTransfer","recipientValue","setRecipientValue","accountNumberValue","setAccountNumberValue","transferTitleValue","setTransferTitleValue","cashAmountValue","setCashAmountValue","errorRecipient","setErrorRecipient","errorAccountNum","setErrorAccountNum","errorTitle","setErrorTitle","errorCash","setErrorCash","confirmationModal","setConfirmationModal","recipientValidation","accountNumberValidation","transferTitleValidation","cashAmountValidation","Number","transferedValues","setTransferedValues","transactionObject","setTransactionObject","initialRender","createTransactionObject","recipient","transferTitle","cashAmount","createObject","accountNumber","faArrowCircleLeft","htmlFor","preventDefault","App","userLogin","setUserLogin","showHomeSite","container","basename","faCog","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d36ae609.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nimport \"./LogInBox.css\";\r\nconst LogInBox = ({ setLogin, setShowHomeSite }) => {\r\n  let randomCode; //przypiszę tutaj losowy kod z tablicy, będzie wyświetlony w boxie\r\n  const codes = [\"Gsj38Fq\", \"du5fP\", \"372yZ\", \"75cT74\", \"1bQ7dTG\"];\r\n\r\n  const inputLogin = useRef(null); //pobieram trzy inputy (ustawiam referencje)\r\n  const inputPassword = useRef(null);\r\n  const inputCode = useRef(null);\r\n\r\n  const displayHidden = {\r\n    visibility: \"hidden\",\r\n  };\r\n\r\n  const displayBlock = {\r\n    visibility: \"visible\",\r\n  };\r\n\r\n  /*const [isHidden, setDisplay] = useState(displayHidden);*/\r\n  const [errorLoginIsHidden, setErrorLoginIsHidden] = useState(displayHidden);\r\n  const [errorPassIsHidden, setErrorPassinIsHidden] = useState(displayHidden);\r\n  const [errorCodeIsHidden, setErrorCodeIsHidden] = useState(displayHidden);\r\n\r\n  const choosingRandomCode = () => {\r\n    //Fn losuje kod z tablicy\r\n    const randomNumber = Math.floor(Math.random() * codes.length);\r\n    randomCode = codes[randomNumber];\r\n  };\r\n\r\n  choosingRandomCode(); //wywołuję funkcję\r\n\r\n  const checkLogin = () => {\r\n    if (inputLogin.current.value === \"\") {\r\n      setErrorLoginIsHidden(displayBlock);\r\n    } else {\r\n      setLogin(inputLogin.current.value);\r\n      setErrorLoginIsHidden(displayHidden);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const checkPassword = () => {\r\n    if (inputPassword.current.value !== \"0000\") {\r\n      setErrorPassinIsHidden(displayBlock);\r\n    } else {\r\n      setErrorPassinIsHidden(displayHidden);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const checkCode = () => {\r\n    if (inputCode.current.value !== randomCode) {\r\n      setErrorCodeIsHidden(displayBlock);\r\n    } else {\r\n      setErrorCodeIsHidden(displayHidden);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const checkForm = () => {\r\n    checkLogin();\r\n    checkPassword();\r\n    checkCode();\r\n\r\n    if (checkLogin() && checkPassword() && checkCode()) {\r\n      setShowHomeSite(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"LogInBox\">\r\n      <label>\r\n        Wpisz login:\r\n        <input\r\n          type=\"text\"\r\n          className=\"login\"\r\n          placeholder=\"Login\"\r\n          ref={inputLogin}\r\n        />\r\n        <p className=\"error-login error\" style={errorLoginIsHidden}>\r\n          Podano zły login\r\n        </p>\r\n      </label>\r\n\r\n      <label>\r\n        Wpisz hasło:\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Hasło\"\r\n          className=\"password\"\r\n          ref={inputPassword}\r\n        />\r\n        <p className=\"error-password error\" style={errorPassIsHidden}>\r\n          Podano złe hasło\r\n        </p>\r\n      </label>\r\n      <p className=\"code\">{randomCode}</p>\r\n      <p>Przepisz powyższy kod:</p>\r\n      <input type=\"text\" ref={inputCode} />\r\n      <p className=\"error-code error\" style={errorCodeIsHidden}>\r\n        Podano zły kod\r\n      </p>\r\n      <button onClick={checkForm}>Zaloguj</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogInBox;\r\n","import React from \"react\";\r\n\r\nimport \"./SlideOne.css\";\r\n\r\nconst SlideOne = () => {\r\n  return (\r\n    <div className=\"slide-one\">\r\n      <h2>Kredyt gotówkowy?</h2>\r\n      <p>Tylko w banku u Skrudża!</p>\r\n      <p>Oprocentowanie to tylko 6.5% w skali roku!</p>\r\n      <p>dowolna kwota - stałe raty - najlepszy wybór</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlideOne;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBolt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./SlideTwo.css\";\r\n\r\nconst SlideTwo = () => {\r\n  return (\r\n    <div className=\"slide-two\">\r\n      <div className=\"flex-container\">\r\n        <p className=\"perspective\">BŁYSKAWICZNE</p>\r\n        <div className=\"flex-columns\">\r\n          <p>\r\n            <FontAwesomeIcon icon={faBolt} /> Kredyty\r\n          </p>\r\n          <p>\r\n            <FontAwesomeIcon icon={faBolt} /> Przelewy\r\n          </p>\r\n          <p>\r\n            <FontAwesomeIcon icon={faBolt} /> Przewalutowania\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlideTwo;\r\n","import React from \"react\";\r\n\r\nimport \"./SlideThree.css\";\r\n\r\nconst SlideThree = () => {\r\n  return (\r\n    <div className=\"slide-three\">\r\n      <p className=\"logo\">Bank u Skrudża</p>\r\n      <div className=\"bar\">\r\n        Twoje zaufanie, nasz profesjonalizm, wspólne zadowolenie!\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlideThree;\r\n","import React from \"react\";\r\nimport SlideOne from \"./SlideOne\";\r\nimport SlideTwo from \"./SlideTwo\";\r\nimport SlideThree from \"./SlideThree\";\r\n\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <SlideOne />\r\n      <SlideTwo />\r\n      <SlideThree />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport \"./Block.css\";\r\n\r\nconst Block = (props) => {\r\n  return (\r\n    <div className={`block ${props.addclass}`}>\r\n      <div className=\"circle\">{props.icon}</div>\r\n      <p>{props.text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Block;\r\n","import React from \"react\";\r\nimport Block from \"./Block\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHandshake,\r\n  faMoneyBill,\r\n  faEuroSign,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n/*<FontAwesomeIcon icon={faHandshake, faMoneyBill, faEuroSign} />*/\r\n\r\nimport \"./WrapperAnimations.css\";\r\n\r\nconst WrapperAnimations = () => {\r\n  return (\r\n    <div className=\"wrapper-animations\">\r\n      <Block\r\n        addclass=\"block-one\"\r\n        text=\"Minimum formalności\"\r\n        icon={<FontAwesomeIcon icon={faHandshake} />}\r\n      />\r\n      <Block\r\n        addclass=\"block-two\"\r\n        text=\"U nas zarabiasz więcej\"\r\n        icon={<FontAwesomeIcon icon={faMoneyBill} />}\r\n      />\r\n      <Block\r\n        addclass=\"block-three\"\r\n        text=\"Błyskawiczne przewalutowanie\"\r\n        icon={<FontAwesomeIcon icon={faEuroSign} />}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WrapperAnimations;\r\n","import \"./Flex.css\";\r\n\r\nexport const Flex = (props) => (\r\n  <div\r\n    className={props.className}\r\n  >\r\n    {props.children}\r\n  </div>\r\n);\r\n\r\nexport default Flex;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n      <Link to=\"/\">\r\n          <li>Konto</li>\r\n        </Link>\r\n        <Link to=\"/about\">\r\n          <li>O Banku</li>\r\n        </Link>\r\n        <Link to={\"/credit\"}>\r\n        <li>Kredyty</li>\r\n        </Link>\r\n        <Link to=\"deposit\">\r\n          <li>Lokata dla Ciebie</li>\r\n        </Link>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\n\r\nimport \"./MessageModal.css\";\r\n\r\nconst MessageModal = (props) => {\r\n  const modalBoolean = props.variable;\r\n\r\n  return (\r\n    <div className={`message-modal ${modalBoolean ? \"\" : \"show-modal\"}`}>\r\n      <h2>OSTRZEŻENIE</h2>\r\n      {props.text}\r\n      <button className=\"cancel\" onClick={() => props.function(true)}>\r\n        Anuluj\r\n      </button>\r\n      <button className=\"accept\" onClick={props.convert}>\r\n        Akceptuj\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageModal;\r\n","import React from \"react\";\r\n\r\nimport \"./History.css\";\r\n\r\n//transactions in props - Array of transactions objects\r\nconst History = ({ transactions }) => {\r\n  return (\r\n    <div className=\"history\">\r\n      {transactions.map((transaction, index) => {\r\n        const { title, amount, date, income } = transaction;\r\n        return (\r\n          <div\r\n            className=\"transaction\"\r\n            style={!income ? { color: \"red\" } : null}\r\n            key={index}\r\n          >\r\n            <p className=\"transaction-date\">{date.toLocaleDateString()}</p>\r\n            <p className=\"transaction-title\">{title}</p>\r\n            <p className=\"amount\">\r\n              {income ? null : \"-\"}\r\n              {amount.toFixed(2)} PLN\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n/* <div className=\"history\">\r\n            <div className=\"transaction\">\r\n              <p className=\"transaction-date\">17.08.2021</p>\r\n              <p className=\"transaction-title\">Żabka - sklep spożywczy</p>\r\n              <p className=\"amount\">19.56</p>\r\n            </div>\r\n          </div> */\r\n\r\nexport default History;\r\n","import React from \"react\";\r\n\r\nimport \"./MessageModal.css\";\r\n\r\nconst TransferModal = (props) => {\r\n  const modalBoolean = props.variable;\r\n\r\n  return (\r\n    <div className={`message-modal ${modalBoolean ? \"\" : \"show-modal\"}`}>\r\n      <h2>OSTRZEŻENIE</h2>\r\n      {props.text}\r\n      <button className=\"ok\" onClick={() => props.function(true)}>\r\n        OK\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransferModal;\r\n","import React, { useState } from \"react\";\r\nimport MessageModal from \"./MessageModal\";\r\nimport History from \"./History\";\r\nimport TransferModal from \"./TransferModal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Account.css\";\r\n\r\nconst Account = (props) => {\r\n  const [isVisible, setIsVisible] = useState({ visibility: \"visible\" });\r\n  const [buttonText, setButtonText] = useState(\"Ukryj saldo\");\r\n  //Below I'm setting button's text (convert button)\r\n  const [convertButtonText, setConvertButtonText] = useState(true);\r\n  //Below modal that informs about exchange currency cost\r\n  const [modalIsHidden, setModalIsHidden] = useState(true);\r\n  const [modalText, setModalText] = useState(\"\");\r\n\r\n  const [transferModalIsHidden, setTransferModalIsHidden] = useState(true);\r\n\r\n  //For account history of transactions\r\n  const [historyIsHidden, setHistoryIsHidden] = useState(true);\r\n\r\n  const toggleModal = (boolean) => {\r\n    setModalIsHidden(boolean);\r\n  };\r\n\r\n  const toggleTransferModal = (boolean) => {\r\n    setTransferModalIsHidden(boolean);\r\n  };\r\n\r\n  //Toggling balance view + text on button\r\n  const toggleBalance = () => {\r\n    isVisible.visibility === \"visible\"\r\n      ? setIsVisible({ visibility: \"hidden\" })\r\n      : setIsVisible({ visibility: \"visible\" });\r\n\r\n    isVisible.visibility === \"visible\"\r\n      ? setButtonText(\"Pokaż saldo\")\r\n      : setButtonText(\"Ukryj saldo\");\r\n  };\r\n\r\n  const newTransaction = (cost) => {\r\n    //adding new transaction to an array of transactions (triggered in convert fn)\r\n\r\n    const transaction = {\r\n      title: \"Koszt przewalutowania\",\r\n      amount: (props.euro / 1) * cost,\r\n      date: new Date(),\r\n      income: false,\r\n    };\r\n    console.log(`${props.euro} * ${cost}`);\r\n\r\n    props.setHistory([transaction, ...props.history]);\r\n    //Above I'm creating new array of transactions. Just created one + existing already\r\n  };\r\n\r\n  //Converting money on another currency\r\n  const convert = () => {\r\n    if (props.isPln) {\r\n      const amount = ((1 / props.euro) * props.balance - 6).toFixed(2);\r\n      //(original currency / end currency) - it's exchange rate * amount of money to exchange\r\n\r\n      props.setBalance(amount);\r\n      props.setIsPln(!props.isPln);\r\n      setConvertButtonText(!convertButtonText);\r\n      setModalText(\r\n        <p>\r\n          Przewalutowanie na walutę euro obciąży Twoje konto na kwotę\r\n          <span>6 euro</span> - jest to całkowity koszt liczony po bieżącym\r\n          kursie\r\n        </p>\r\n      );\r\n      setModalIsHidden(true);\r\n      newTransaction(6);\r\n    } else {\r\n      const amount = ((props.euro / 1) * (props.balance - 6.5)).toFixed(2);\r\n\r\n      props.setBalance(amount);\r\n      props.setIsPln(!props.isPln);\r\n      setModalIsHidden(true);\r\n      setConvertButtonText(!convertButtonText);\r\n      newTransaction(6.5);\r\n    }\r\n  };\r\n\r\n  const cashTransfer = () => {\r\n    if (!props.isPln) {\r\n      setModalText(\r\n        <p>\r\n          Aby wykonać przelew musisz przewalutować konto na <span>PLN</span>\r\n        </p>\r\n      );\r\n      setTransferModalIsHidden(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"account\">\r\n      <h2>\r\n        <button className=\"hide\" onClick={toggleBalance}>\r\n          {buttonText}\r\n        </button>\r\n        <span style={isVisible}>\r\n          SALDO: {props.balance.toLocaleString()} {props.isPln ? \"PLN\" : \"EUR\"}\r\n        </span>{\" \"}\r\n        <button\r\n          className=\"conversion\"\r\n          onClick={() => {\r\n            props.isPln\r\n              ? setModalText(\r\n                  <p>\r\n                    Przewalutowanie na walutę euro obciąży Twoje konto na kwotę\r\n                    <span> 6 euro</span> - jest to całkowity koszt liczony po\r\n                    bieżącym kursie\r\n                  </p>\r\n                )\r\n              : setModalText(\r\n                  <p>\r\n                    Przewalutowanie na walutę PLN obciąży Twoje konto na kwotę\r\n                    <span> 6.5 euro</span> - jest to całkowity koszt liczony po\r\n                    bieżącym kursie\r\n                  </p>\r\n                );\r\n            setModalIsHidden(false);\r\n          }}\r\n        >\r\n          {props.isPln ? \"Przewalutuj na euro\" : \"Przewalutuj na PLN\"}\r\n        </button>\r\n      </h2>\r\n\r\n      <h3>00 2847 2049 0483 0000 9304</h3>\r\n      <div className=\"actions\">\r\n        {props.isPln ? (\r\n          <Link to=\"/transfer\">\r\n            <button>Zrób przelew</button>\r\n          </Link>\r\n        ) : (\r\n          <button onClick={cashTransfer}>Zrób przelew</button>\r\n        )}\r\n\r\n        <button\r\n          onClick={() => {\r\n            /*toggling history*/\r\n            setHistoryIsHidden(!historyIsHidden);\r\n          }}\r\n        >\r\n          Historia\r\n        </button>\r\n      </div>\r\n      {!historyIsHidden ? <History transactions={props.history} /> : null}\r\n      <MessageModal\r\n        variable={modalIsHidden}\r\n        function={toggleModal}\r\n        convert={convert}\r\n        text={modalText}\r\n      />\r\n      <TransferModal\r\n        variable={transferModalIsHidden}\r\n        function={toggleTransferModal}\r\n        text={modalText}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Currencies.css\";\r\n\r\nconst Currencies = (props) => {\r\n  const [currenciesObjects, setCurrenciesObjects] = useState([]);\r\n  const [date, setDate] = useState(\"\");\r\n  const [priceGold, setPriceGold] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.nbp.pl/api/exchangerates/tables/a\")\r\n      .then((json) => json.json())\r\n      .then((data) => {\r\n        setDate(data[0].effectiveDate);\r\n        data[0].rates.map((obj) => {\r\n          const { code } = obj;\r\n          obj.id = code;\r\n          if (\r\n            code === \"USD\" ||\r\n            code === \"CZK\" ||\r\n            code === \"UAH\" ||\r\n            code === \"RUB\" ||\r\n            code === \"GBP\" ||\r\n            code === \"CHF\" ||\r\n            code === \"AUD\" ||\r\n            code === \"EUR\" ||\r\n            code === \"JPY\" ||\r\n            code === \"HRK\" ||\r\n            code === \"TRY\" ||\r\n            code === \"CAD\"\r\n          ) {\r\n            setCurrenciesObjects((prev) => [...prev, obj]);\r\n          }\r\n          if (code === \"EUR\") {\r\n            props.prop(obj);\r\n          }\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.nbp.pl/api/cenyzlota\")\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        setPriceGold(data[0].cena.toFixed(2));\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"currencies\">\r\n        {currenciesObjects.length > 0 ? (\r\n          <>\r\n            {\" \"}\r\n            <h2>Kursy walut na dzień {date}</h2>\r\n            <div className=\"currencies-container\">\r\n              {currenciesObjects.map((obj) => {\r\n                const { code, mid, currency } = obj;\r\n                return (\r\n                  <h4 key={code}>\r\n                    {currency} {code} : {mid.toFixed(4)}\r\n                  </h4>\r\n                );\r\n              })}\r\n              <h4>\r\n                ZŁOTO: wyliczona w NBP cena 1 g złota (w próbie 1000) -{\" \"}\r\n                {priceGold}\r\n                zł\r\n              </h4>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <h2>Kursy walut w trakcie ładowania...</h2>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Currencies;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./CryptoCurrenciesSite.css\";\r\n\r\nconst CryptoCurrenciesSite = () => {\r\n  const [cryptos, setCryptos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      fetch(\r\n        \"https://api.nomics.com/v1/currencies/ticker?key=4b12c0ec1320606bcc4fc5ff33fe66cd85a618c3&ids=BTC,ETH,DOT,DOGE,LTC,LUNA,ATOM,ADA,&interval=1d,30d&convert=EUR&per-page=100&page=1\"\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setCryptos(data);\r\n        });\r\n    }, 10000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"crypto-site\">\r\n      {cryptos.length !== 0 ? (\r\n        <>\r\n          <p className=\"fetching-info\">(dane odświeżane są co 10 sekund)</p>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>WALUTA</th>\r\n                <th>SYMBOL</th>\r\n                <th>CENA</th>\r\n                <th>MAX</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {cryptos.map((obj) => {\r\n                const { symbol, high, name, price } = obj;\r\n\r\n                return (\r\n                  <tr key={symbol}>\r\n                    <td>{name}</td>\r\n                    <td>\r\n                      <i>{symbol}</i>\r\n                    </td>\r\n                    <td>{parseFloat(price).toFixed(4)} EUR</td>\r\n                    <td>{parseFloat(high).toFixed(4)} EUR</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      ) : (\r\n        <h1>Proszę czekać, pobieram dane...</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoCurrenciesSite;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Account from \"./Account\";\r\nimport Currencies from \"./Currencies\";\r\nimport CryptoCurrenciesSite from \"../CryptoCurrenciesSite/CryptoCurrenciesSite\";\r\n\r\nimport \"./YourAccountSite.css\";\r\n\r\nconst YourAccountSite = ({\r\n  login,\r\n  historyTransactions,\r\n  setHistoryTransactions,\r\n  accountBalance,\r\n  setAccountBalance,\r\n  isPln,\r\n  setIsPln,\r\n}) => {\r\n  //For saveEuro Fn\r\n  const [euroMid, setEuroMid] = useState(\"\");\r\n\r\n  //Callback Fn for Currencies Component - it allows to set euroMid\r\n  const saveEuro = (obj) => {\r\n    setEuroMid(obj.mid);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"your-account-site\">\r\n      <Account\r\n        euro={euroMid}\r\n        history={historyTransactions}\r\n        setHistory={setHistoryTransactions}\r\n        balance={accountBalance}\r\n        setBalance={setAccountBalance}\r\n        isPln={isPln}\r\n        setIsPln={setIsPln}\r\n      />\r\n      <Currencies prop={saveEuro} />\r\n      <CryptoCurrenciesSite />\r\n\r\n      {/*<BankTransfer history={historyTransactions} setHistory={setHistoryTransactions} balance={accountBalance} setBalance={setAccountBalance} isPln={isPln} />*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YourAccountSite;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./CalculateCredit.css\";\r\n\r\nconst CalculateCredit = () => {\r\n  const [showInstallmentInfo, setShowInstallmentInfo] = useState(false);\r\n  const [showErrorInfo, setShowErrorInfo] =\r\n    useState(false); /*This is error div for inputs validation*/\r\n  const [creditValue, setCreditValue] = useState(\"10000\");\r\n  const [years, setYears] = useState(\"10\");\r\n  const [months, setMonths] = useState(\"6\");\r\n  const [installment, setInstallment] = useState(null);\r\n  const isValid = /^\\d+$/;\r\n  /*const isValid = /^([1-9])$/;*/\r\n\r\n  const calculating = () => {\r\n    const percentages = (0.065 * creditValue) / 12;\r\n    setInstallment(creditValue / (years * 12 + months) + percentages);\r\n    //This is value of credit installment\r\n    setShowInstallmentInfo(true);\r\n  };\r\n\r\n  const inputsValidation = () => {\r\n    if (!creditValue || !isValid.test(creditValue) || creditValue === \"0\") {\r\n      setShowErrorInfo(true);\r\n    } else if (!years && !months) {\r\n      setShowErrorInfo(true);\r\n    } else if (years && months) {\r\n      if (years === \"0\" && months === \"0\") {\r\n        setShowErrorInfo(true);\r\n      } else if (!isValid.test(years) || !isValid.test(months)) {\r\n        setShowErrorInfo(true);\r\n      } else {\r\n        setShowErrorInfo(false);\r\n        calculating();\r\n      }\r\n    } else if (years) {\r\n      if (isValid.test(years)) {\r\n        setShowErrorInfo(false);\r\n        calculating();\r\n      } else {\r\n        setShowErrorInfo(true);\r\n      }\r\n    } else if (months) {\r\n      if (!isValid.test(months)) {\r\n        setShowErrorInfo(true);\r\n      } else {\r\n        setShowErrorInfo(false);\r\n        calculating();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section id=\"credit\">\r\n      <h2>\r\n        Spełnij <span>MARZENIA</span> z kredytem gotówkowym w Banku u Skrudża\r\n      </h2>\r\n      <p>\r\n        Najlepszy możliwy wybór - oprocentowanie to tylko <span>6.5%</span> w\r\n        skali roku!\r\n      </p>\r\n      <p>\r\n        Wybierz kwotę pożyczki oraz czas spłaty, a my wyliczymy Twoją ratę\r\n        kredytu\r\n      </p>\r\n      <div className=\"input-section\">\r\n        <p>\r\n          Kwota pożyczki:{\" \"}\r\n          <input\r\n            type=\"number\"\r\n            min=\"100\"\r\n            value={creditValue}\r\n            onChange={(e) => {\r\n              setCreditValue(e.target.value);\r\n              setShowInstallmentInfo(false);\r\n            }}\r\n          />\r\n          <span className=\"info\">\r\n            (Wpisz pełną kwotę bez znaków kropki czy przecinka)\r\n          </span>\r\n        </p>\r\n        <p>\r\n          Chcę wziąć kredyt na{\"\\u00A0\"}\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            value={years}\r\n            onChange={(e) => {\r\n              setYears(e.target.value);\r\n              setShowInstallmentInfo(false);\r\n            }}\r\n          />\r\n          {\"\\u00A0\"}lat i{\"\\u00A0\"}\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            value={months}\r\n            onChange={(e) => {\r\n              setMonths(e.target.value);\r\n              setShowInstallmentInfo(false);\r\n            }}\r\n          />{\" \"}\r\n          {\"\\u00A0\"}miesięcy\r\n        </p>\r\n      </div>\r\n\r\n      {showInstallmentInfo ? (\r\n        <div className=\"installment-info\">\r\n          Jeśli przyznamy Ci {creditValue} złotych kredytu na{\" \"}\r\n          {years ? `${years} lat` : null}\r\n          {years && months ? \" i \" : null}\r\n          {months ? `${months} miesięcy` : null}, Twoja rata będzie wynosiła\r\n          tylko {installment.toFixed(2)} złotych miesięcznie\r\n        </div>\r\n      ) : null}\r\n      {showErrorInfo ? (\r\n        <div className=\"error-info\">Błędnie wypełnione pola!</div>\r\n      ) : null}\r\n      <button onClick={inputsValidation}>\r\n        <FontAwesomeIcon icon={faRedo} />\r\n        PRZELICZ\r\n      </button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CalculateCredit;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./DepositSite.css\";\r\n\r\nconst DepositSite = (props) => {\r\n  const [monthsValue, setMonthsValue] = useState(\"\");\r\n  const [inputIsHidden, setInputIsHidden] = useState(true);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [errorIsHidden, setErrorIsHidden] = useState(true);\r\n  const [answerIsHidden, setAnswerIsHidden] = useState(true);\r\n\r\n  const [earnings, setEarnings] = useState(\"\");\r\n\r\n  const calculateEarnings = () => {\r\n    setEarnings(parseInt(((0.05 * inputValue) / 12) * monthsValue).toFixed(2));\r\n  };\r\n\r\n  const validateInput = () => {\r\n    const isValid = /^\\d+$/;\r\n\r\n    if (!inputValue) {\r\n      setErrorIsHidden(false);\r\n      setAnswerIsHidden(true);\r\n    } else if (!isValid.test(inputValue)) {\r\n      setErrorIsHidden(false);\r\n      setAnswerIsHidden(true);\r\n    } else {\r\n      setErrorIsHidden(true);\r\n      calculateEarnings();\r\n      setAnswerIsHidden(false);\r\n    }\r\n  };\r\n\r\n  const setMonths = (e) => {\r\n    setMonthsValue(e.target.value);\r\n    setInputIsHidden(false);\r\n    setAnswerIsHidden(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"deposit-site\">\r\n      <h1>\r\n        <span>{props.login},</span> sprawdź jaką lokatę przygotowaliśmy\r\n        specjalnie dla Ciebie!\r\n      </h1>\r\n      <div className=\"deposit\">\r\n        <div className=\"time-period\">\r\n          <p className=\"mini-header\">Na jaki okres lokujesz pieniądze?</p>\r\n          <button className=\"time\" value=\"3\" onClick={setMonths}>\r\n            3 miesiące\r\n          </button>\r\n          <button className=\"time\" value=\"6\" onClick={setMonths}>\r\n            6 miesięcy\r\n          </button>\r\n          <button className=\"time\" value=\"12\" onClick={setMonths}>\r\n            12 miesięcy\r\n          </button>\r\n          <button className=\"time\" value=\"24\" onClick={setMonths}>\r\n            24 miesiące\r\n          </button>\r\n          <button className=\"time\" value=\"36\" onClick={setMonths}>\r\n            36 miesięcy\r\n          </button>\r\n        </div>\r\n        <div\r\n          className=\"money\"\r\n          style={inputIsHidden ? { visibility: \"hidden\" } : null}\r\n        >\r\n          <p className=\"mini-header\">Ile chcesz ulokować?</p>\r\n          <p className=\"input-error\">\r\n            {errorIsHidden ? null : \"Błędnie wpisana kwota\"}\r\n          </p>\r\n          <input\r\n            type=\"number\"\r\n            value={inputValue}\r\n            onChange={(e) => {\r\n              setInputValue(e.target.value);\r\n              setAnswerIsHidden(true);\r\n            }}\r\n          />\r\n          <p className=\"p-info\">\r\n            (Wpisz pełną kwotę bez znaków kropki czy przecinka)\r\n          </p>\r\n          <button className=\"next\" onClick={validateInput}>\r\n            Dalej <FontAwesomeIcon icon={faArrowRight} />\r\n          </button>\r\n        </div>\r\n        <div\r\n          className=\"deposit-info\"\r\n          style={answerIsHidden ? { visibility: \"hidden\" } : null}\r\n        >\r\n          Nieźle! Po upływie {monthsValue} miesięcy zarobisz aż {earnings}{\" \"}\r\n          złotych!\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DepositSite;\r\n","import React from 'react';\r\n\r\nimport \"./About.css\";\r\n\r\nconst About = () => {\r\nreturn (\r\n    <div className=\"about-bank\">\r\n        <h1>O BANKU</h1>\r\n        <div className=\"motto\"><span>,,Pieniądze robią pieniądze\"</span></div>\r\n        <div className=\"text\">\r\n            <p>Wiemy, że <span>zaufanie do Banku,</span> to trzon dobrej obsługi Klienta - ochrona Twoich funduszy jest dla nas najważniejsza.</p>\r\n            <p>Chcemy także dać Ci możliwość oszczędzania czy podjęcia kredytu na bardzo dobrych warunkach. Od zawsze chcieliśmy być najlepsi i konkurencyjni dla innych banków.</p>\r\n            <p>Powstaliśmy w 1993 roku przy ul. Skąpców 100 w Warszawie. </p>\r\n            <p className=\"bold\">ZMIENIAMY ŚWIAT NA LEPSZE!</p>\r\n        </div>\r\n    </div>\r\n)\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./ConfirmationModal.css\";\r\n\r\nconst ConfirmationModal = ({show, toggle}) => {\r\n    return (\r\n        <div className=\"confirmation-modal\">\r\n            <div> {/*for background*/}\r\n            <h1>SUKCES</h1>\r\n            <p>Przelew wykonany pomyślnie</p>\r\n            <p className=\"smaller\">(jest on widoczny w historii konta)</p>\r\n            <FontAwesomeIcon icon={faCheckCircle} onClick={()=>{toggle(!show)}} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ConfirmationModal;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\n\r\nimport \"./BankTransfer.css\";\r\n\r\nconst BankTransfer = ({ history, setHistory, balance, setBalance, isPln }) => {\r\n  /* Above I'm destructuring props (history is an array of objects - transactions data) and setHistory is a function to set history. Balance is just cash on account balance n setBalance for setting this.\r\n  Also if isPln is true - we can do cash transfer. Props from YourAccountSite Component*/\r\n\r\n  /* Four variables for four inputs. On inputs I have inline function, that sets values */\r\n  const [recipientValue, setRecipientValue] = useState(\"\");\r\n  const [accountNumberValue, setAccountNumberValue] = useState(\"\");\r\n  const [transferTitleValue, setTransferTitleValue] = useState(\"\");\r\n  const [cashAmountValue, setCashAmountValue] = useState(\"\");\r\n\r\n  const [errorRecipient, setErrorRecipient] = useState(\"\");\r\n  const [errorAccountNum, setErrorAccountNum] = useState(\"\");\r\n  const [errorTitle, setErrorTitle] = useState(\"\");\r\n  const [errorCash, setErrorCash] = useState(\"\");\r\n\r\n  const [confirmationModal, setConfirmationModal] = useState(false);\r\n\r\n  const recipientValidation = () => {\r\n    if (!recipientValue) {\r\n      setErrorRecipient(\"Niewypełnione pole\");\r\n    } else {\r\n      setErrorRecipient(\"\");\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const accountNumberValidation = () => {\r\n    const isValid = /^\\d+$/; //only numbers\r\n\r\n    if (!accountNumberValue) {\r\n      setErrorAccountNum(\"Niewypełnione pole\");\r\n    } else if (!isValid.test(accountNumberValue)) {\r\n      setErrorAccountNum(\"Nieprawidłowy format\");\r\n    } else {\r\n      setErrorAccountNum(\"\");\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const transferTitleValidation = () => {\r\n    if (!transferTitleValue) {\r\n      setErrorTitle(\"Niewypełnione pole\");\r\n    } else {\r\n      setErrorTitle(\"\");\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const cashAmountValidation = () => {\r\n    const isValid = /^[0-9][0-9]*?(\\.[0-9][0-9])?$/; //Only numbers and two decimal places\r\n    if (!cashAmountValue) {\r\n      setErrorCash(\"Niewypełnione pole\");\r\n    } else if (!isValid.test(cashAmountValue)) {\r\n      setErrorCash(\"Nieprawidłowy format\");\r\n    } else if (\r\n      Number.parseFloat(cashAmountValue) > Number.parseFloat(balance)\r\n    ) {\r\n      setErrorCash(\"Niewystarczająca ilość środków\");\r\n    } else {\r\n      setErrorCash(\"\");\r\n\r\n      setBalance(\r\n        (\r\n          Number.parseFloat(balance) - Number.parseFloat(cashAmountValue)\r\n        ).toFixed(2)\r\n      );\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const transferFormValidation = () => {\r\n    recipientValidation();\r\n    accountNumberValidation();\r\n    transferTitleValidation();\r\n    cashAmountValidation();\r\n\r\n    if (\r\n      recipientValidation() &&\r\n      accountNumberValidation() &&\r\n      transferTitleValidation() &&\r\n      cashAmountValidation()\r\n    ) {\r\n      setConfirmationModal(true);\r\n      createObject();\r\n      setRecipientValue(\"\");\r\n      setAccountNumberValue(\"\");\r\n      setTransferTitleValue(\"\");\r\n      setCashAmountValue(\"\");\r\n    }\r\n  };\r\n\r\n  /* *************************************************************************************************** */\r\n  /*All code in this section is about creating another object in historyTransactionsArray. It works like this:\r\n1. We have empty objects - transferedValues n transactionObject.\r\n2. We have initialRender variable - it's true.\r\n3. On useEffect I'm checking if it's initial render - when it's true, I'm setting variable to false and have dependency array.\r\n4. When user submit form, submitForm Fn is triggered. In this Fn I'm triggering createObject => createObject creates object and sets transferedValues => When transferedValues is changed, useEffect is triggering and in this useEffect I'm triggering createTransactionObject => This sets transactionObject => It's trigger another useEffect, when I'm setting History => And we have another object in accountHistory! Awesome!\r\n\r\n  /* For object that contains data from inputs. This object is created in a function */\r\n  const [transferedValues, setTransferedValues] = useState({});\r\n  const [transactionObject, setTransactionObject] = useState({});\r\n\r\n  const initialRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (!initialRender.current) {\r\n      setHistory([transactionObject, ...history]);\r\n    }\r\n  }, [transactionObject]);\r\n\r\n  useEffect(() => {\r\n    if (!initialRender.current) {\r\n      createTransactionObject();\r\n    } else {\r\n      initialRender.current = false;\r\n    }\r\n  }, [transferedValues]);\r\n\r\n  const createTransactionObject = () => {\r\n    setTransactionObject({\r\n      title: `${transferedValues.recipient} - ${transferedValues.transferTitle}`,\r\n      amount: parseFloat(transferedValues.cashAmount),\r\n      income: false,\r\n      date: new Date(),\r\n    });\r\n  };\r\n\r\n  /* On createObject function I'm creating object that contains values from inputs. This is triggered, when the form is send */\r\n  const createObject = () => {\r\n    setTransferedValues({\r\n      recipient: recipientValue,\r\n      accountNumber: accountNumberValue,\r\n      transferTitle: transferTitleValue,\r\n      cashAmount: cashAmountValue,\r\n    });\r\n  };\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    /*createObject();*/\r\n    transferFormValidation();\r\n  };\r\n  /* **************************************************************************************************** */\r\n  /*const regExp = /^[1-9]*(\\.[0-9][0-9])?$/;*/\r\n\r\n  return (\r\n    <div className=\"bank-transfer-page\">\r\n      <div className=\"bank-transfer-container\">\r\n        <Link to=\"/\">\r\n          <FontAwesomeIcon icon={faArrowCircleLeft} />\r\n        </Link>\r\n        <h1>\r\n          PRZELEW\r\n          <br />\r\n          GOTÓWKOWY\r\n        </h1>\r\n        <form>\r\n          <label htmlFor=\"recipient\">Nazwa Odbiorcy</label>\r\n          <p className=\"error\">{errorRecipient}</p>\r\n          <input\r\n            type=\"text\"\r\n            id=\"recipient\"\r\n            value={recipientValue}\r\n            onChange={(e) => {\r\n              setRecipientValue(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <label htmlFor=\"account-number\">Na konto</label>\r\n          <p className=\"error\">{errorAccountNum}</p>\r\n          <input\r\n            type=\"text\"\r\n            id=\"account-number\"\r\n            placeholder=\"dowolna ilość CYFR\"\r\n            value={accountNumberValue}\r\n            onChange={(e) => {\r\n              setAccountNumberValue(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <label htmlFor=\"transfer-title\">Tytuł przelewu</label>\r\n          <p className=\"error\">{errorTitle}</p>\r\n          <input\r\n            type=\"text\"\r\n            id=\"transfer-title\"\r\n            value={transferTitleValue}\r\n            onChange={(e) => {\r\n              setTransferTitleValue(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <label htmlFor=\"cash-amount\">Kwota PLN</label>\r\n          <p className=\"error\">{errorCash}</p>\r\n          <input\r\n            type=\"number\"\r\n            id=\"cash-amount\"\r\n            value={cashAmountValue}\r\n            onChange={(e) => {\r\n              setCashAmountValue(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <button type=\"submit\" onClick={submitForm}>\r\n            Wyślij przelew\r\n          </button>\r\n        </form>\r\n        {confirmationModal ? (\r\n          <ConfirmationModal\r\n            show={confirmationModal}\r\n            toggle={setConfirmationModal}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      {/* <input type=\"number\" onChange={period} value={inputTransferValue}></input>\r\n      <button onClick={validation}>wyslij</button>*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BankTransfer;\r\n","import \"./App.css\";\r\nimport LogInBox from \"./components/Index-LogIn Site/LogInBox\";\r\nimport Header from \"./components/Header/Header\";\r\nimport WrapperAnimations from \"./components/Index-LogIn Site/WrapperAnimations\";\r\nimport Flex from \"./Flex\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\r\nimport YourAccountSite from \"./components/YourAccountSite/YourAccountSite\";\r\nimport CalculateCredit from \"./components/YourAccountSite/CalculateCredit\";\r\nimport DepositSite from \"./components/DepositSite/DepositSite\";\r\nimport { useState } from \"react\";\r\nimport About from \"./components/About/About\";\r\nimport BankTransfer from \"./components/BankTransfer/BankTransfer\";\r\nimport ModalInfo from \"./components/Index-LogIn Site/ModalInfo\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// Array of objects - each object has transaction data for history of transactions\r\n// It's passed via props to YourAccountSite\r\nconst history = [\r\n  {\r\n    title: \"Żabka - artykuły spożywcze\",\r\n    amount: 18.72,\r\n    income: false,\r\n    date: new Date(2021, 8, 1),\r\n  },\r\n  {\r\n    title: \"Hebe - sklep kosmetyczny\",\r\n    amount: 247.5,\r\n    income: false,\r\n    date: new Date(2021, 8, 1),\r\n  },\r\n  {\r\n    title: \"McDonald\",\r\n    amount: 32.38,\r\n    income: false,\r\n    date: new Date(2021, 7, 17),\r\n  },\r\n  {\r\n    title: \"Przelew wychodzący do Marian Jarząbek\",\r\n    amount: 300,\r\n    income: false,\r\n    date: new Date(2021, 7, 16),\r\n  },\r\n  {\r\n    title: \"Przelew przychodzący\",\r\n    amount: 15598.6,\r\n    income: true,\r\n    date: new Date(2021, 7, 16),\r\n  },\r\n];\r\n\r\nfunction App() {\r\n  /*States on higher level (above router) - it won't be resetting when the adress is changed (router) */\r\n  const [userLogin, setUserLogin] = useState(\"Nieznajomy\");\r\n  const [showHomeSite, setShowHomeSite] = useState(true);\r\n  /* If showHomeSite is true - LogIn site is rendering - otherwise accountSite */\r\n\r\n  const [accountBalance, setAccountBalance] = useState(15000);\r\n  const [historyTransactions, setHistoryTransactions] = useState(history); //just history\r\n  const [isPln, setIsPln] = useState(true); //It checks if currency on account is PLN or Euro\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {showHomeSite ? (\r\n        <>\r\n          <Header />\r\n          <Flex container=\"flex\" className=\"container-home-site\">\r\n            {/*<ModalInfo />*/}\r\n            <LogInBox\r\n              setLogin={(login) => {\r\n                setUserLogin(login);\r\n              }}\r\n              setShowHomeSite={setShowHomeSite}\r\n            />\r\n            <WrapperAnimations />\r\n          </Flex>{\" \"}\r\n        </>\r\n      ) : (\r\n        <Router basename=\"/BankApplication\">\r\n          <div className=\"top-bar\">\r\n            <p>\r\n              {<FontAwesomeIcon icon={faCog} />}Witaj, {userLogin}\r\n            </p>\r\n            <Nav />\r\n          </div>\r\n\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <YourAccountSite\r\n                login={userLogin}\r\n                historyTransactions={historyTransactions}\r\n                setHistoryTransactions={setHistoryTransactions}\r\n                accountBalance={accountBalance}\r\n                setAccountBalance={setAccountBalance}\r\n                isPln={isPln}\r\n                setIsPln={setIsPln}\r\n              />\r\n            </Route>\r\n            <Route path=\"/credit\">\r\n              <CalculateCredit />\r\n            </Route>\r\n\r\n            <Route path=\"/deposit\">\r\n              <DepositSite login={userLogin} />\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <About />\r\n            </Route>\r\n            <Route path=\"/transfer\">\r\n              <BankTransfer\r\n                history={historyTransactions}\r\n                setHistory={setHistoryTransactions}\r\n                balance={accountBalance}\r\n                setBalance={setAccountBalance}\r\n                isPln={isPln}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n \n    <App />\n  ,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//<React.StrictMode>\n//</React.StrictMode>\n"],"sourceRoot":""}